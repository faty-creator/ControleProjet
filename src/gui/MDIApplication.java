/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.plot.PlotOrientation;
import javax.swing.JFrame;
import services.CoursService;
import services.InscriptionService;
import beans.Cours;
import beans.Etudiant;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;

/**
 *
 * @author pc
 */
public class MDIApplication extends javax.swing.JFrame {

    private static MDIApplication instance;

    /**
     * Creates new form MDIApplication
     */
    public MDIApplication() {
        initComponents();
        this.setTitle("Gestion des Étudiants et Inscriptions");
        this.setExtendedState(MAXIMIZED_BOTH);

        desktopPane = new JDesktopPane();
        setContentPane(desktopPane);

    }

    public static MDIApplication getInstance() {
        if (instance == null) {
            instance = new MDIApplication();
        }
        return instance;
    }

    private void fermerFenetresExistantes(JDesktopPane desktop) {
        for (JInternalFrame frame : desktop.getAllFrames()) {
            frame.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        CoursMenu = new javax.swing.JMenu();
        MenuCours = new javax.swing.JMenuItem();
        MenuEtudiant = new javax.swing.JMenuItem();
        MenuInscription = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CoursMenu.setBackground(new java.awt.Color(102, 102, 255));
        CoursMenu.setMnemonic('f');
        CoursMenu.setText("Gestion");

        MenuCours.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        MenuCours.setMnemonic('o');
        MenuCours.setText("Cours");
        MenuCours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCoursActionPerformed(evt);
            }
        });
        CoursMenu.add(MenuCours);

        MenuEtudiant.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        MenuEtudiant.setMnemonic('s');
        MenuEtudiant.setText("Etudiant");
        MenuEtudiant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuEtudiantActionPerformed(evt);
            }
        });
        CoursMenu.add(MenuEtudiant);

        MenuInscription.setText("Inscription");
        MenuInscription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuInscriptionActionPerformed(evt);
            }
        });
        CoursMenu.add(MenuInscription);

        menuBar.add(CoursMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Recherche");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("les étudiants par cours");
        cutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("les étudiant par nom");
        copyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(copyMenuItem);

        jMenuItem1.setText("les cours par etudiant");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        editMenu.add(jMenuItem1);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Statistique");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Nombre d’étudiants par cours (Bar chart)");
        contentMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contentMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(contentMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuCoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCoursActionPerformed
        fermerFenetresExistantes(desktopPane);
        CoursForm cf = new CoursForm();
        desktopPane.add(cf);
        cf.setVisible(true);


    }//GEN-LAST:event_MenuCoursActionPerformed

    private void MenuEtudiantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuEtudiantActionPerformed
        fermerFenetresExistantes(desktopPane);
        EtudiantForm ef = new EtudiantForm();
        desktopPane.add(ef);
        ef.setVisible(true);
    }//GEN-LAST:event_MenuEtudiantActionPerformed

    private void cutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutMenuItemActionPerformed
        fermerFenetresExistantes(desktopPane);
        EtudiantByCourse ebs = EtudiantByCourse.getInstance();
        desktopPane.add(ebs);
        ebs.setVisible(true);
    }//GEN-LAST:event_cutMenuItemActionPerformed

    private void MenuInscriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuInscriptionActionPerformed
        fermerFenetresExistantes(desktopPane);
        InscriptionForm is = new InscriptionForm();
        desktopPane.add(is);
        is.setVisible(true);

    }//GEN-LAST:event_MenuInscriptionActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        fermerFenetresExistantes(desktopPane);
        CourseByStudent cs = new CourseByStudent();
        desktopPane.add(cs);
        cs.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void copyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyMenuItemActionPerformed
        fermerFenetresExistantes(desktopPane);
        EtudiantByName en = EtudiantByName.getInstance();
        desktopPane.add(en);
        en.setVisible(true);    }//GEN-LAST:event_copyMenuItemActionPerformed

    private void contentMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentMenuItemActionPerformed
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Initialiser les services
        CoursService cs = new CoursService();
        InscriptionService is = new InscriptionService();

        // Récupérer tous les cours
        List<Cours> allCourses = cs.findAll();

        if (allCourses != null) {
            for (Cours cours : allCourses) {
                // Récupérer les étudiants inscrits à ce cours
                List<Etudiant> etudiants = is.findEtudiantByCourse(cours);
                if (etudiants != null) {
                    int count = etudiants.size(); // Nombre d'étudiants
                    dataset.addValue(count, "Étudiants", cours.getIntitule()); // Ajouter au dataset
                }
            }
        }

        // Créer le diagramme à barres
        JFreeChart barChart = ChartFactory.createBarChart(
                "Nombre d'étudiants par cours", // Titre du graphique
                "Cours", // Axe X
                "Nombre d'étudiants", // Axe Y
                dataset, // Données
                PlotOrientation.VERTICAL, // Orientation
                true, true, false // Inclure légende, tooltips, URLs
        );

        // Créer un panel pour afficher le graphique
        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(new java.awt.Dimension(560, 367));

        // Afficher le graphique dans une nouvelle fenêtre
        JFrame frame = new JFrame("Graphique des étudiants par cours");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.getContentPane().add(chartPanel);
        frame.pack();
        frame.setLocationRelativeTo(null); // Centrer la fenêtre
        frame.setVisible(true);
    }//GEN-LAST:event_contentMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDIApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MDIApplication().setVisible(true));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu CoursMenu;
    private javax.swing.JMenuItem MenuCours;
    private javax.swing.JMenuItem MenuEtudiant;
    private javax.swing.JMenuItem MenuInscription;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
